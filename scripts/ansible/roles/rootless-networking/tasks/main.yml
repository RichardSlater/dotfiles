---
- name: Ensure required dependencies are installed (Debian/Ubuntu)
  apt:
    name:
      - passt
      - slirp4netns
      - dbus-user-session
    state: present
  when: ansible_os_family == 'Debian'
  become: true

- name: Ensure required dependencies are installed (CentOS)
  yum:
    name:
      - passt
      - slirp4netns
    state: present
  when: ansible_os_family == 'RedHat'
  become: true

- name: Set facts for the real user and UID
  set_fact:
    real_user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
    real_user_uid: "{{ lookup('ansible.builtin.pipe', 'id -u ' + (ansible_env.SUDO_USER | default(ansible_env.USER))) }}"
    XDG_RUNTIME_DIR: "/run/user/{{ real_user_uid }}"

- name: Write Debug Variables
  debug:
    msg:
      - "Real User: {{ real_user }}"
      - "Real User UID: {{ real_user_uid }}"
      - "XDG Runtime Dir: {{ XDG_RUNTIME_DIR }}"

- name: Enable and start podman.socket for {{ real_user }}
  ansible.builtin.systemd:
    name: podman.socket
    enabled: true
    state: started
    scope: user
  environment:
    XDG_RUNTIME_DIR: "{{ XDG_RUNTIME_DIR }}"

- name: Check podman socket responds with OK
  ansible.builtin.command:
    cmd: >
      curl --unix-socket /run/user/{{ real_user_uid }}/podman/podman.sock -H 'content-type: application/json' -sf http://localhost/_ping
  register: podman_ping
  changed_when: false

- name: Fail if podman socket does not respond with OK
  ansible.builtin.fail:
    msg: "Podman socket did not respond with OK: {{ podman_ping.stdout }}"
  when: podman_ping.stdout != 'OK'
